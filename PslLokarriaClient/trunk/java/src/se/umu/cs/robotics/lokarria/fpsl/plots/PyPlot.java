/*-------------------------------------------------------------------*\
THIS SOURCE IS PART OF THE HPL-FRAMEWORK - www.cognitionreversed.com

Copyright 2011 Erik Billing
Department of Computing Science, Umea University, Sweden,
(http://www.cognitionreversed.com).

LICENSE:

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston,
MA 02111-1307, USA.
\*-------------------------------------------------------------------*/

package se.umu.cs.robotics.lokarria.fpsl.plots;

import java.util.Date;
import se.umu.cs.robotics.utils.StringTools;
import java.util.List;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 *
 * @author Erik Billing <billing@cs.umu.se>
 */

public class PyPlot {

    FileWriter out;

    public PyPlot(String name) throws IOException {
        File file = new File(String.format("plots/%s.py", name));
        out = new FileWriter(file);
    }

    void render(double[] data, double[] predictions) throws IOException {
        renderHead();
        out.write("data = ");
        renderData(out, data);
        out.write("\n");
        out.write("predictions = ");
        renderData(out, predictions);
        out.write("\n\n");

        out.write("import numpy as np\n");
        out.write("from matplotlib import pyplot\n");
        out.write("from matplotlib.lines import Line2D\n");
        out.write("from matplotlib.patches import Patch, Rectangle\n");
        out.write("from matplotlib.font_manager import FontProperties\n");
        out.write("\n");
        out.write("fig = pyplot.figure()\n");
        out.write("ax = fig.add_subplot(211)\n");
        out.write("lines = ax.plot(np.array([[data[i],predictions[i]] for i in range(len(data))]), '-o', ms=6, lw=1, alpha=0.7, picker=3)\n");
        out.write("pyplot.show()\n");

    }

    public void render(double[] data, List<double[]> predictions) throws IOException {
        renderHead();

        out.write("data = ");
        renderData(out, data);
        out.write("\n");
        out.write("predictions = (\n");
        for (double[] pred : predictions) {
            renderData(out, pred);
            out.write(",\n");
        }
        out.write(")\n\n");

        renderImports();

        out.write("fig = pyplot.figure()\n");
        out.write("ax = fig.add_subplot(111)\n");
        out.write("pyplot.title('PSL predictions during training')\n");
        out.write("lineData, = ax.plot(data, '-o', lw=1, alpha=0.7)\n");
        out.write("linePredictions, = ax.plot([], [], '-o', lw=1, alpha=0.7, animated=True)\n");
        out.write("lineTime, = ax.plot([], [], '-o', lw=1, alpha=0.7, animated=True)\n");
        out.write("def render():\n");
        out.write("\tbackground = fig.canvas.copy_from_bbox(ax.bbox)\n");

        out.write("\tfor i in range(len(predictions)):\n");
        out.write("\t\tfig.canvas.restore_region(background)\n");
        out.write("\t\tlinePredictions.set_data(range(len(predictions[i])), predictions[i])\n");
        out.write("\t\tlineTime.set_data([i,i],[5,-5])\n");
        out.write("\n");
        out.write("\t\t# just draw the animated artist\n");
        out.write("\t\tax.draw_artist(linePredictions)\n");
        out.write("\t\tax.draw_artist(lineTime)\n");
        out.write("\t\t# just redraw the axes rectangle\n");
        out.write("\t\tfig.canvas.blit(ax.bbox)\n");
        out.write("\t\ttime.sleep(0.05)\n");
        out.write("\n");
        out.write("manager = pyplot.get_current_fig_manager()\n");
        out.write("manager.window.after(100, render)\n");
        out.write("pyplot.show()\n");

    }

    private void renderHead() throws IOException {
        out.write("'''\n");
        out.write("\tPlot generated by ");
        out.write(this.getClass().getSimpleName());
        out.write("\n\t");
        out.write(new Date().toString());
        out.write("\n'''\n\n");
    }

    private void renderImports() throws IOException {
        out.write("import numpy as np\n");
        out.write("import sys, time\n");
        out.write("from matplotlib import pyplot\n");
        out.write("from matplotlib.lines import Line2D\n");
        out.write("from matplotlib.patches import Patch, Rectangle\n");
        out.write("from matplotlib.font_manager import FontProperties\n");
        out.write("\n");
    }

    private void renderData(FileWriter out, double[] data) throws IOException {
        out.write("[");
        out.write(StringTools.join(data, ","));
        out.write("]");
    }

    public void close() throws IOException {
        out.close();
    }
}